# NASA Exoplanet Classification System - .gitignore
# Comprehensive ignore file for Python Flask application

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to use the following settings:
#  File > Settings > Version Control > Ignored Files and Folders
.idea/

# VS Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# NASA Exoplanet Classification System Specific
# Application logs
logs/
*.log

# Uploaded files (temporary)
uploads/
temp/

# Model files (if large, consider using Git LFS)
models/*.pkl
models/*.npy
models/*.joblib
# Uncomment the line below if you want to ignore all model files
# models/

# Configuration files with sensitive data
config.ini
.env.local
.env.production

# Database files
*.db
*.sqlite
*.sqlite3

# Cache files
.cache/
cache/

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Backup files
*.bak
*.backup
*.orig

# Compiled assets
static/css/tailwind-production.css
static/js/bundle.js
static/js/bundle.min.js

# Node.js (if using npm/yarn for frontend assets)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
yarn.lock

# Docker
.dockerignore
docker-compose.override.yml

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Kubernetes
*.kubeconfig

# SSL certificates
*.pem
*.key
*.crt
*.csr

# IDE specific files
*.iml
*.ipr
*.iws
.project
.classpath
.settings/

# OS generated files
.directory
.fuse_hidden*

# Test coverage
htmlcov/
.coverage
.coverage.*

# Documentation builds
docs/_build/
docs/build/

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# pyenv
.python-version

# pipenv
Pipfile.lock

# Poetry
poetry.lock

# PDM
pdm.lock

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath
*.sage.py

# Spyder
.spyderproject
.spyproject

# Rope
.ropeproject

# mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre
.pyre/

# pytype
.pytype/

# Cython
cython_debug/

# NASA Project Specific
# Large datasets (consider Git LFS for these)
data/
datasets/
*.csv
*.json
*.xml

# Model artifacts
artifacts/
checkpoints/

# Experiment tracking
mlruns/
.mlflow/

# Jupyter notebook outputs
*.ipynb

# API keys and secrets
secrets/
.secrets
api_keys.txt
credentials.json

# Performance profiling
*.prof
*.profile

# Memory dumps
*.hprof

# Core dumps
core.*

# NASA Space Apps Challenge specific
challenge_submission/
presentation/
documentation/draft/

# Backup and archive files
*.zip
*.tar.gz
*.rar
*.7z

# Large binary files (consider Git LFS)
*.bin
*.dat
*.img
*.iso

# Machine learning model files (large)
*.h5
*.hdf5
*.pb
*.pkl
*.joblib
*.model

# Data files
*.parquet
*.feather
*.pickle
